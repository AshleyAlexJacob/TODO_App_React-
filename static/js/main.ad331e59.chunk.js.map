{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["TODO_KEY","App","useState","todos","setTodos","nameRef","useRef","useEffect","jsonTodos","localStorage","getItem","JSON","parse","setItem","stringify","className","ref","type","onClick","name","current","value","addTodo","map","index","updatedTodos","splice","removeTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAGaA,EAAW,QAgETC,MA7Df,WACE,MAA0BC,mBAAmB,IAA7C,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAUC,iBAAyB,MA6BzC,OA3BAC,qBAAU,WACR,IAAMC,EAAYC,aAAaC,QAAQV,GACnCQ,GAAWJ,EAASO,KAAKC,MAAMJ,MAClC,IAEHD,qBAAU,WACRE,aAAaI,QAAQb,EAAUW,KAAKG,UAAUX,MAC7C,CAACA,IAqBF,sBAAKY,UAAU,oEAAf,UACI,oBAAIA,UAAU,kCAAd,uBACA,sBAAKA,UAAU,0BAAf,UACE,uBAAOA,UAAU,2BACbC,IAAKX,EACLY,KAAK,SAEP,wBAAQF,UAAU,6DACtBG,QAAS,YA3BC,WAAO,IAAD,IAEdC,EAAI,oBAAGd,EAAQe,eAAX,aAAG,EAAiBC,aAApB,QAA6B,GAC1B,KAATF,IAIJf,EAAS,GAAD,mBAAKD,GAAL,CAAYgB,KAEhBd,EAAQe,UACVf,EAAQe,QAAQC,MAAQ,KAiBRC,IADV,oBAIFnB,EAAMoB,KAAI,SAACF,EAAMG,GAChB,OACE,sBAAKT,UAAU,4BAAf,UAEE,4BAAIM,IACJ,cAAC,IAAD,CACLN,UAAU,2DACVG,QAAS,kBAxBE,SAACM,GAClB,IAAMC,EAAY,YAAOtB,GACzBsB,EAAaC,OAAOF,EAAO,GAC3BpB,EAASqB,GAqBYE,CAAWH,QAJjBA,UCtCJI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ad331e59.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useState } from 'react';\nimport { TrashIcon } from \"@heroicons/react/outline\";\nexport const TODO_KEY = \"TODOS\";\n  \n\nfunction App() {\n  const [todos, setTodos] = useState<string[]>([]);\n  const nameRef = useRef<HTMLInputElement>(null); //To get access to the input field value from html\n  // Business Logic to add the todos to our list\n  useEffect(() => {\n    const jsonTodos = localStorage.getItem(TODO_KEY);\n    if (jsonTodos) setTodos(JSON.parse(jsonTodos));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(TODO_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = () => {\n    // assignment of the value\n    const name = nameRef.current?.value ?? \"\";\n    if (name === \"\") return;\n    // then addinng the todo to our list \n    // using spread operator to add the new item\n\n    setTodos([...todos, name]);\n    // clearing the current list\n    if (nameRef.current) {\n      nameRef.current.value = \"\";\n    }\n  };\n  const removeTodo = (index: number) => {\n    const updatedTodos = [...todos];\n    updatedTodos.splice(index, 1);\n    setTodos(updatedTodos);\n  };\n  return (\n    <div className=\"w-screen h-screen flex flex-col items-center space-y-8 pt-40 dark\">\n        <h1 className=\"text-4xl font-medium  font-sans\">TODO List</h1>\n        <div className=\"flex space-x-2 flex-row\">\n          <input className=\"border rounded px-4 py-2\"\n              ref={nameRef}\n              type=\"text\"\n          />  \n            <button className=\"bg-blue-700 py-2 px-4 rounded text-white hover:bg-blue-900\" \n        onClick={()=>{addTodo()}}>Add</button>\n        </div>\n        {\n          todos.map((value,index)=>{\n           return (\n             <div className=\"flex justify-between w-80\" \n              key={index}>\n               <p>{value}</p>\n               <TrashIcon\n          className=\"w-6 h-6 text-gray-400 cursor-pointer hover:text-gray-700\"\n          onClick={() => removeTodo(index)}\n        ></TrashIcon>\n             </div>\n           );\n          })\n        }\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}